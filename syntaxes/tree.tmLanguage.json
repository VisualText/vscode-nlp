{
    "scopeName": "source.tree",
    "fileTypes": [
        "log",
        "tree"
    ],
    "name": "Tree",
    "patterns": [
        {
            "include": "#expression"
        }
    ],
    "repository": {
        "expression": {
            "name": "meta.expression.tree",
            "patterns": [
                {
                    "include": "#comment-line"
                },
                {
                    "include": "#rewrites"
                },
                {
                    "include": "#node-name"
                },
                {
                    "include": "#attributes"
                }                
            ]
        },
        "node-name": {
            "match": "^([\\s]+)([^_\\s]+)",
            "name": "keyword.node.tree"
        },
        "rewrites": {
            "name": "keyword.rewrite.tree",
            "match": "\\b_[\\w]+\\b"
        },
        "attributes": {
            "begin": "\\[",
            "end": "\\]",
            "patterns": [
                {
                    "include": "#number"
                },
                {
                    "include": "#literal"
                },
                {
                    "include": "#qstring-double"
                }
            ],
            "name": "meta.attribute.tree"
        },
        "qstring-double": {
            "begin": "\"",
            "end": "\\\"|(?:[^\\\\\\n]$)",
            "name": "string.double.tree",
            "patterns": [
                {
                    "include": "#string-character-escape"
                }
            ]
        },
        "string-character-escape": {
            "match": "\\\\(x\\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)",
            "name": "constant.character.escape.tree"
        },
        "literal": {
            "name": "literal.tree",
            "patterns": [
                {
                    "include": "#numeric-literal"
                },
                {
                    "include": "#types"
                },
                {
                    "include": "#fired"
                }
            ]
        },
        "number": {
            "match": "\\b[0-9]+\\b",
            "name": "constant.numeric.tree"
        },
        "fired": {
            "match": "\\b(?i:(fired))\\b",
            "name": "keyword.fired.tree"
        },
        "types": {
            "match": "\\b(?i:(alpha|ctrl|emoji|node|num|punct|white))\\b",
            "name": "keyword.attribute.tree"
        },
        "comment-line": {
            "match": "\\s*#.*$\\n?",
            "name": "comment.line.dict"
        }
    }
}